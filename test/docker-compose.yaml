services:
  mailhog:
    image: mailhog/mailhog:latest
    ports:
        - "8025:8025"

  postgres:
    image: rknop/rkwebutil_test_postgres
    build:
      context: docker_postgres
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    healthcheck:
      test: netcat -w 1 localhost 5432 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  createdb:
    depends_on:
      postgres:
        condition: service_healthy
    image: rknop/rkwebutil_test_flaskserver
    build:
      context: docker_flaskserver
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    entrypoint:
      - /bin/bash
      - -c
      - python3 /usr/src/createdb.py
    user: ${USERID:-0}:${GROUPID:-0}

  # makeinstall_webpy:
  #   image: rknop/rkwebutil_test_webserver
  #   build:
  #     context: docker_webserver
  #   environment:
  #     DB_NAME: test_rkwebutil
  #     DB_HOST: postgres
  #     DB_USER: postgres
  #     DB_PASS: fragile
  #     DB_PORT: 5432
  #   volumes:
  #     - type: bind
  #       source: ../
  #       target: /rkwebutil_src
  #     - type: bind
  #       source: test_install/html
  #       target: /var/www/html
  #   entrypoint:
  #     - /bin/bash
  #     - -c
  #     - |
  #       make -C /rkwebutil_src/test/docker_webserver install
  #   user: ${USERID:-0}:${GROUPID:-0}

  # webserver:
  #   depends_on:
  #     createdb:
  #       condition: service_completed_successfully
  #     makeinstall_webpy:
  #       condition: service_completed_successfully
  #     mailhog:
  #       condition: service_started
  #   image: rknop/rkwebutil_test_webserver
  #   build:
  #     context: docker_webserver
  #   volumes:
  #     - type: bind
  #       source: test_install/html
  #       target: /var/www/html
  #   environment:
  #     DB_NAME: test_rkwebutil
  #     DB_HOST: postgres
  #     DB_USER: postgres
  #     DB_PASS: fragile
  #     DB_PORT: 5432
  #   ports:
  #     - "8080:8080"
  #   user: ${USERID:-0}:${GROUPID:-0}

  makeinstall_flask:
    image: rknop/rkwebutil_test_flaskserver
    build:
      context: docker_flaskserver
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    volumes:
      - type: bind
        source: ../
        target: /rkwebutil_src
      - type: bind
        source: test_install/flask
        target: /var/www/html
    entrypoint:
      - /bin/bash
      - -c
      - |
        make -C /rkwebutil_src/test/docker_flaskserver install
    user: ${USERID:-0}:${GROUPID:-0}

  flaskserver:
    depends_on:
      createdb:
        condition: service_completed_successfully
      makeinstall_flask:
        condition: service_completed_successfully
      mailhog:
        condition: service_started
    healthcheck:
      test: netcat -w 1 localhost 8081 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    image: rknop/webutil_test_flaskserver
    build:
      context: docker_flaskserver
    volumes:
      - type: bind
        source: test_install/flask
        target: /flask
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    ports:
      - "8081:8081"
    user: ${USERID:-0}:${GROUPID:-0}

  makeinstall_flask_sql:
    image: rknop/rkwebutil_test_flaskserver_sql
    build:
      context: .
      dockerfile: ./docker_flaskserver_sql/Dockerfile
      target: flaskserver_sql
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    volumes:
      - type: bind
        source: ../
        target: /rkwebutil_src
      - type: bind
        source: test_install/flask_sql
        target: /var/www/html
    entrypoint:
      - /bin/bash
      - -c
      - |
        make -C /rkwebutil_src/test/docker_flaskserver_sql install
    user: ${USERID:-0}:${GROUPID:-0}

  flaskserver_sql:
    depends_on:
      createdb:
        condition: service_completed_successfully
      makeinstall_flask_sql:
        condition: service_completed_successfully
      mailhog:
        condition: service_started
    healthcheck:
      test: netcat -w 1 localhost 8082 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    image: rknop/webutil_test_flaskserver_sql
    build:
      context: .
      dockerfile: ./docker_flaskserver_sql/Dockerfile
      target: flaskserver_sql
    volumes:
      - type: bind
        source: test_install/flask_sql
        target: /flask
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    ports:
      - "8082:8082"
    user: ${USERID:-0}:${GROUPID:-0}


  shell:
    depends_on:
      postgres:
        condition: service_healthy
      # webserver:
      #   condition: service_started
      flaskserver:
        condition: service_healthy
      flaskserver_sql:
        condition: service_healthy
    image: rknop/rkwebutil_test
    build:
      context: docker_test
    volumes:
      - type: bind
        source: .
        target: /tests
      - type: bind
        source: ../
        target: /rkwebutil_src
    working_dir: /rkwebutil_src
    entrypoint: [ "tail", "-f", "/etc/issue" ]
    user: ${USERID:-0}:${GROUPID:-0}

  runtests:
    depends_on:
      postgres:
        condition: service_started
      # webserver:
      #   condition: service_healthy
      flaskserver:
        condition: service_healthy
      flaskserver_sql:
        condition: service_healthy
    image: rknop/rkwebutil_test
    build:
      context: docker_test
    volumes:
      - type: bind
        source: .
        target: /tests
      - type: bind
        source: test_install
        target: /test_install
    working_dir: /tests
    entrypoint: [ "pytest", "-v" ]
    user: ${USERID:-0}:${GROUPID:-0}
