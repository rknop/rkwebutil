services:
  mailhog:
    image: mailhog/mailhog:latest
    ports:
        - "8025:8025"

  postgres:
    image: rknop/rkwebutil_test_postgres
    build:
      context: docker_postgres
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    healthcheck:
      test: netcat -w 1 localhost 5432 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  createdb:
    depends_on:
      postgres:
        condition: service_healthy
    image: rknop/rkwebutil_test_flask
    build:
      context: .
      dockerfile: ./docker_flask/Dockerfile
      target: webserver
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    entrypoint:
      - /bin/bash
      - -c
      - python3 /usr/src/createdb.py
    user: ${USERID:-0}:${GROUPID:-0}

  makeinstall_flask:
    image: rknop/rkwebutil_test_flask
    build:
      context: .
      dockerfile: ./docker_flask/Dockerfile
      target: webserver
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    volumes:
      - type: bind
        source: ../
        target: /rkwebutil_src
      - type: bind
        source: test_install/flask
        target: /var/www/html
    entrypoint:
      - /bin/bash
      - -c
      - |
        make -C /rkwebutil_src/test/docker_flask install <<<---- CHECK THIS
    user: ${USERID:-0}:${GROUPID:-0}

  flask:
    depends_on:
      createdb:
        condition: service_completed_successfully
      makeinstall_flask:
        condition: service_completed_successfully
      mailhog:
        condition: service_started
    healthcheck:
      test: netcat -w 1 localhost 8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    image: rknop/webutil_test_flask
    build:
      context: .
      dockerfile: ./docker_flask/Dockerfile
      target: webserver
    volumes:
      - type: bind
        source: test_install/flask_sql
        target: /flask
    environment:
      DB_NAME: test_rkwebutil
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: fragile
      DB_PORT: 5432
    ports:
      - "8080:8080"
    user: ${USERID:-0}:${GROUPID:-0}

#  makeinstall_flask_sa:
#    image: rknop/rkwebutil_test_flask_sa
#    build:
#      context: .
#      dockerfile: ./docker_flask_sa/Dockerfile
#      target: webserver
#    environment:
#      DB_NAME: test_rkwebutil
#      DB_HOST: postgres
#      DB_USER: postgres
#      DB_PASS: fragile
#      DB_PORT: 5432
#    volumes:
#      - type: bind
#        source: ../
#        target: /rkwebutil_src
#      - type: bind
#        source: test_install/flask_sa
#        target: /var/www/html
#    entrypoint:
#      - /bin/bash
#      - -c
#      - |
#        make -C /rkwebutil_src/test/docker_flask_sa install
#    user: ${USERID:-0}:${GROUPID:-0}
#
#  flask_sa:
#    depends_on:
#      createdb:
#        condition: service_completed_successfully
#      makeinstall_flask:
#        condition: service_completed_successfully
#      mailhog:
#        condition: service_started
#    healthcheck:
#      test: netcat -w 1 localhost 8081 || exit 1
#      interval: 5s
#      timeout: 10s
#      retries: 5
#    image: rknop/webutil_test_flask_sa
#    build:
#      context: .
#      dockerfile: ./docker_flask_sa/Dockerfile
#      target: webserver
#    volumes:
#      - type: bind
#        source: test_install/flask
#        target: /flask
#    environment:
#      DB_NAME: test_rkwebutil
#      DB_HOST: postgres
#      DB_USER: postgres
#      DB_PASS: fragile
#      DB_PORT: 5432
#    ports:
#      - "8081:8081"
#    user: ${USERID:-0}:${GROUPID:-0}

  # makeinstall_webpy_sa:
  #   image: rknop/rkwebutil_test_webpy_sa
  #   build:
  #     context: .
  #     dockerfile: ./docker_webpy_sa/Dockerfile
  #     target: webserver
  #   environment:
  #     DB_NAME: test_rkwebutil
  #     DB_HOST: postgres
  #     DB_USER: postgres
  #     DB_PASS: fragile
  #     DB_PORT: 5432
  #   volumes:
  #     - type: bind
  #       source: ../
  #       target: /rkwebutil_src
  #     - type: bind
  #       source: test_install/webpy_sa
  #       target: /var/www/html
  #   entrypoint:
  #     - /bin/bash
  #     - -c
  #     - |
  #       make -C /rkwebutil_src/test/docker_webpy_sa install
  #   user: ${USERID:-0}:${GROUPID:-0}

  # webpy_sa:
  #   depends_on:
  #     createdb:
  #       condition: service_completed_successfully
  #     makeinstall_webpy:
  #       condition: service_completed_successfully
  #     mailhog:
  #       condition: service_started
  #   image: rknop/rkwebutil_test_webpy_sa
  #   build:
  #     context: .
  #     dockerfile: ./docker_webpy_sa/Dockerfile
  #     target: webserver
  #   volumes:
  #     - type: bind
  #       source: test_install/webpy_sa
  #       target: /var/www/html
  #   environment:
  #     DB_NAME: test_rkwebutil
  #     DB_HOST: postgres
  #     DB_USER: postgres
  #     DB_PASS: fragile
  #     DB_PORT: 5432
  #   ports:
  #     - "8083:8083"
  #   user: ${USERID:-0}:${GROUPID:-0}


  shell:
    depends_on:
      postgres:
        condition: service_started
      flask:
        condition: service_healthy
      # flask_sa:
      #   condition: service_healthy
      # webpy:
      #   condition: service_healthy
      # webpy_sa:
      #   condition: service_healthy
      # apache:
      #   condition: service_healthy
      # apache_sa:
      #   condition: service_healthy
    image: rknop/rkwebutil_test
    build:
      context: docker_test
    volumes:
      - type: bind
        source: .
        target: /tests
      - type: bind
        source: ../
        target: /rkwebutil_src
    working_dir: /rkwebutil_src
    entrypoint: [ "tail", "-f", "/etc/issue" ]
    user: ${USERID:-0}:${GROUPID:-0}

  runtests:
    depends_on:
      postgres:
        condition: service_started
      flask:
        condition: service_healthy
      # flask_sa:
      #   condition: service_healthy
      # webpy:
      #   condition: service_healthy
      # webpy_sa:
      #   condition: service_healthy
      # apache:
      #   condition: service_healthy
      # apache_sa:
      #   condition: service_healthy
    image: rknop/rkwebutil_test
    build:
      context: docker_test
    volumes:
      - type: bind
        source: .
        target: /tests
      - type: bind
        source: test_install
        target: /test_install
    working_dir: /tests
    entrypoint: [ "pytest", "-v" ]
    user: ${USERID:-0}:${GROUPID:-0}
